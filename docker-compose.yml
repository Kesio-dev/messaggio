version: '3.8'

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - '2181:2181'

  kafka:
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_CREATE_TOPICS="messages:1:1"
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: messages_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user" ]
      interval: 5s
      timeout: 5s
      retries: 5

  migrator:
    image: migrate/migrate
    depends_on:
      db:
        condition: service_healthy
    command: [ "-path", "/migrations", "-database", "postgresql://user:password@db:5432/messages_db?sslmode=disable", "up" ]
    volumes:
      - ./migrations:/migrations

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
